{<img src="https://coveralls.io/repos/devdame/DBC-final-project/badge.png" alt="Coverage Status" />}[https://coveralls.io/r/devdame/DBC-final-project]

http://truism.herokuapp.com/assets/truism_logo_2-307567e9f5d2e9fdcc3498d03f57540b.png

<b>trUism</b> is a tool to help prospective college students find a school that's a good culture fit. We listen to social media output on different college campuses and report to you what students are actually talking about.

Check it out! http://truism.herokuapp.com

=== Sample Screenshots

http://i29.photobucket.com/albums/c259/dandydanny/DBC/truism_screen_shots_zpscd98d91b.jpg

=== System Requirements
- Ruby 2.0.0 p-451
- Rails 4.0.3
- Postgres 9.3.2
- Internet access

=== External APIs and Libraries
<b>Geofeedia</b>

Location-based social media aggregation and monitoring.

- API: https://app.geofeedia.com/account/apisetup
- Docs: https://app.geofeedia.com/Content/APIQuickStartGuide.pdf

<b>AlchemyAPI</b>

Natural Language Processing and sentiment analysis.

- Demo: http://www.alchemyapi.com/products/demo
- Docs: http://www.alchemyapi.com/api

<b>D3.js</b>

JavaScript data visualization library utilizing web standards such as SVG, HTML5, and CSS3.

- Gallery: https://github.com/mbostock/d3/wiki/Gallery
- Docs: https://github.com/mbostock/d3/wiki

=== Getting Started

1. Clone to local machine: <tt>git clone https://github.com/devdame/DBC-final-project.git campuslyfe</tt>
2. Install dependencies: <tt>bundle</tt>
3. Initialize database: <tt>rake db:reset</tt>
4. Run server: <tt>rails s</tt>
5. Visit http://localhost:3000

=== Workflow

<em>As a collaborator on this project, I hold myself to high standard of code, commit often, and never push to the master branch.</em>

1. Starting out, or if using a new development workstation:

   <tt>git clone https://github.com/devdame/DBC-final-project.git campuslyfe</tt>


2. Create new branch for the feature you're working on:

   <tt>git checkout -b Daniel_awesomebranch</tt>
3. To bring the local code base up-to-date, first checkout master branch:

   <tt>git checkout master</tt>

4. Pull in the latest code from the master brach:

   <tt>git pull origin master</tt>

5. Then switch back to your feature branch before merging code from master:

   <tt>git checkout Daniel_awesomebranch</tt>

6. Now merge the updated master branch code into your current feature branch:

   <tt>git merge master</tt>

7. Now you may work on the code for your feature branch. COMMIT OFTEN.

8. When you are ready to submit code to the project repo, go ahead and commit one more time. First include files that were changed:

   <tt>git add .</tt>

9. Then commit the changes you've made:

   <tt>git commit -m "Add awesome feature to do awesome thing"</tt>

10. Repeat step <b>3 through 6</b> to ensure your code base is up-to-date with any changes to master that might have occured in the time you were working on your feature branch. Solve conflicts if present.

11. Push your code to your remote feature branch:

    <tt>git push origin Daniel_awesomebranch</tt>

12. Submit a pull request on Github for code review.

=== Database Schema

http://i29.photobucket.com/albums/c259/dandydanny/DBC/truism_schema_2014-03-26_zps195b1af4.png

=== Running the Test Suite

<tt>rspec</tt>

=== Brought to You By
http://i29.photobucket.com/albums/c259/dandydanny/DBC/team_foxsandwich_zps9492f352.jpg

Jay:: https://github.com/jayrogers889csa
Jess:: https://github.com/thejessleigh
Andrew:: https://github.com/Birdrock
Lauren:: https://github.com/devdame
Daniel:: https://github.com/dandydanny
